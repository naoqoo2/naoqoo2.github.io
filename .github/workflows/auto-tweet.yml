name: Auto Tweet

on:
  push:
    branches: [ main ]
    paths:
      - '_posts/**/*.md'
  workflow_dispatch:
    inputs:
      post_file:
        description: 'Post file path (e.g., _posts/retrospective/2025-07-21-20250721.md)'
        required: true
        type: string

jobs:
  auto-tweet:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "files=${{ github.event.inputs.post_file }}" >> "$GITHUB_OUTPUT"
          else
            echo "files=$(git diff --name-only HEAD~1 HEAD | grep '^_posts/.*\.md$' | head -1)" >> "$GITHUB_OUTPUT"
          fi

      - name: Extract post info
        id: post-info
        if: steps.changed-files.outputs.files != ''
        run: |
          FILE="${{ steps.changed-files.outputs.files }}"
          if [ -f "$FILE" ]; then
            TITLE=$(sed -n '/^[[:space:]]*title:/p' "$FILE" | sed 's/^[[:space:]]*title:[[:space:]]*["\x27]*\(.*\)["\x27]*$/\1/' | head -1)
            FILENAME=$(basename "$FILE")
            DATE=$(echo "$FILENAME" | grep -o '^[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}')
            if [[ "$FILE" == *"/cooking/"* ]]; then
              CATEGORY="cooking"
            elif [[ "$FILE" == *"/retrospective/"* ]]; then
              CATEGORY="retrospective"
            else
              CATEGORY="blog"
            fi
            echo "title=$TITLE" >> "$GITHUB_OUTPUT"
            echo "date=$DATE" >> "$GITHUB_OUTPUT"
            echo "category=$CATEGORY" >> "$GITHUB_OUTPUT"
            echo "filename=$FILENAME" >> "$GITHUB_OUTPUT"
          fi

      - name: Create tweet content
        id: tweet-content
        if: steps.post-info.outputs.title != ''
        run: |
          TITLE="${{ steps.post-info.outputs.title }}"
          CATEGORY="${{ steps.post-info.outputs.category }}"
          DATE="${{ steps.post-info.outputs.date }}"
          FILENAME="${{ steps.post-info.outputs.filename }}"

          POST_URL="https://naoqoo2.github.io/blog/${DATE//\-/\/}/${FILENAME%.md}/"

          if [ "$CATEGORY" = "cooking" ]; then
            TWEET_TEXT=$(printf '%s\n%s\n%s\n%s\n' "新しい料理レシピを投稿しました！" "$TITLE" "$POST_URL" "#料理 #レシピ #ブログ #育休メシ")
          elif [ "$CATEGORY" = "retrospective" ]; then
            TWEET_TEXT=$(printf '%s\n%s\n%s\n%s\n' "振り返り記事を投稿しました！" "$TITLE" "$POST_URL" "#振り返り #ふりかえり #ブログ #エンジニア")
          else
            TWEET_TEXT=$(printf '%s\n%s\n%s\n%s\n' "新しい記事を投稿しました！" "$TITLE" "$POST_URL" "#ブログ #技術 #エンジニア")
          fi

          ENCODED_TWEET=$(echo "$TWEET_TEXT" | python3 -c "import sys,urllib.parse;print(urllib.parse.quote(sys.stdin.read()))")
          echo "content=$ENCODED_TWEET" >> "$GITHUB_OUTPUT"

      - name: Post to Twitter
        if: steps.tweet-content.outputs.content != ''
        env:
          TWEET_CONTENT: ${{ steps.tweet-content.outputs.content }}
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
        run: |
          JSON_PAYLOAD=$(python3 -c "import os,urllib.parse,json;print(json.dumps({'text': urllib.parse.unquote(os.environ['TWEET_CONTENT'])}))")
          curl -X POST "https://api.twitter.com/2/tweets" \
            -H "Authorization: Bearer $TWITTER_BEARER_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD"
