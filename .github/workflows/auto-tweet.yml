name: Auto Tweet

on:
  push:
    branches: [ main ]
    paths:
      - '_posts/**/*.md'
  workflow_dispatch:
    inputs:
      post_file:
        description: 'Post file path (e.g., _posts/retrospective/2025-07-21-20250721.md)'
        required: true
        type: string

jobs:
  auto-tweet:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "files=${{ github.event.inputs.post_file }}" >> "$GITHUB_OUTPUT"
          else
            echo "files=$(git diff --name-only HEAD~1 HEAD | grep '^_posts/.*\.md$' | head -1)" >> "$GITHUB_OUTPUT"
          fi

      - name: Extract post info
        id: post-info
        if: steps.changed-files.outputs.files != ''
        run: |
          FILE="${{ steps.changed-files.outputs.files }}"
          if [ -f "$FILE" ]; then
            # Extract title from YAML front matter (単純版)
            TITLE=$(sed -n '/^title:/p' "$FILE" | sed 's/^title: *["\x27]*\(.*\)["\x27]*$/\1/' | head -1)

            # Extract date from filename
            FILENAME=$(basename "$FILE")
            DATE=$(echo "$FILENAME" | grep -o '^[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}')

            # Extract category (cooking, retrospective, or blog)
            if [[ "$FILE" == *"/cooking/"* ]]; then
              CATEGORY="cooking"
            elif [[ "$FILE" == *"/retrospective/"* ]]; then
              CATEGORY="retrospective"
            else
              CATEGORY="blog"
            fi

            echo "title=$TITLE" >> "$GITHUB_OUTPUT"
            echo "date=$DATE" >> "$GITHUB_OUTPUT"
            echo "category=$CATEGORY" >> "$GITHUB_OUTPUT"
            echo "filename=$FILENAME" >> "$GITHUB_OUTPUT"
          fi

      - name: Create tweet content
        id: tweet-content
        if: steps.post-info.outputs.title != ''
        run: |
          TITLE="${{ steps.post-info.outputs.title }}"
          CATEGORY="${{ steps.post-info.outputs.category }}"
          DATE="${{ steps.post-info.outputs.date }}"
          FILENAME="${{ steps.post-info.outputs.filename }}"

          # Create post URL
          POST_URL="https://naoqoo2.github.io/blog/${DATE//\-/\/}/${FILENAME%.md}/"

          # Create tweet based on category (ヒアドキュメントで複数行文字列)
          if [ "$CATEGORY" = "cooking" ]; then
            TWEET_TEXT=$(cat <<'EOF'
新しい料理レシピを投稿しました！
__TITLE__
__URL__
#料理 #レシピ #ブログ #育休メシ
EOF
)
          elif [ "$CATEGORY" = "retrospective" ]; then
            TWEET_TEXT=$(cat <<'EOF'
振り返り記事を投稿しました！
__TITLE__
__URL__
#振り返り #ふりかえり #ブログ #エンジニア
EOF
)
          else
            TWEET_TEXT=$(cat <<'EOF'
新しい記事を投稿しました！
__TITLE__
__URL__
#ブログ #技術 #エンジニア
EOF
)
          fi

          # プレースホルダ置換（シングルクォートEOFにしてるので後置換）
          TWEET_TEXT="${TWEET_TEXT/__TITLE__/$TITLE}"
          TWEET_TEXT="${TWEET_TEXT/__URL__/$POST_URL}"

          # URL encode the tweet content
          ENCODED_TWEET=$(echo "$TWEET_TEXT" | python3 -c "import sys, urllib.parse; print(urllib.parse.quote(sys.stdin.read()))")
          echo "content=$ENCODED_TWEET" >> "$GITHUB_OUTPUT"

      - name: Post to Twitter
        if: steps.tweet-content.outputs.content != ''
        run: |
          TWEET_CONTENT="${{ steps.tweet-content.outputs.content }}"

          # Decode the tweet content and create JSON payload
          JSON_PAYLOAD=$(echo "$TWEET_CONTENT" | python3 -c "
import sys
import urllib.parse
import json
content = urllib.parse.unquote(sys.stdin.read().strip())
print(json.dumps({'text': content}))
")
          curl -X POST "https://api.twitter.com/2/tweets" \
            -H "Authorization: Bearer ${{ secrets.TWITTER_BEARER_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD"
        env:
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
